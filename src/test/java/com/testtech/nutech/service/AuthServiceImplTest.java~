package com.testtech.nutech.service;

import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

@SpringBootTest
@RunWith(SpringRunner.class)
public class AuthServiceImplTest {

    @Autowired
    private AuthService authService;

    @Test
    public void testRegisterSuccess() {
        AuthRequest authRequest = new AuthRequest("test@example.com", "password", "John", "Doe");
        ResponseEntity<Object> response = authService.register(authRequest);
        assertEquals(HttpStatus.OK, response.getStatusCode());
        assertEquals(0, ((ResponeHandler<Object>) response.getBody()).getCode());
        assertEquals("Berhasil register silahkan login", ((ResponeHandler<Object>) response.getBody()).getMessage());
    }

    @Test
    public void testRegisterFailedValidation() {
        AuthRequest authRequest = new AuthRequest("", "password", "John", "Doe");
        ResponseEntity<Object> response = authService.register(authRequest);
        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
        assertEquals(101, ((ResponeHandler<Object>) response.getBody()).getCode());
        assertEquals("Email tidak boleh kosong", ((ResponeHandler<Object>) response.getBody()).getMessage());
    }

    @Test
    public void testLoginSuccess() {
        LoginRequest loginRequest = new LoginRequest("test@example.com", "password");
        ResponseEntity<Object> response = authService.login(loginRequest, null);
        assertEquals(HttpStatus.OK, response.getStatusCode());
        assertEquals(0, ((ResponeHandler<Object>) response.getBody()).getCode());
        assertEquals("Sukses Login", ((ResponeHandler<Object>) response.getBody()).getMessage());
    }

    @Test
    public void testLoginFailedInvalidCredentials() {
        LoginRequest loginRequest = new LoginRequest("test@example.com", "wrongpassword");
        ResponseEntity<Object> response = authService.login(loginRequest, null);
        assertEquals(HttpStatus.UNAUTHORIZED, response.getStatusCode());
        assertEquals(103, ((ResponeHandler<Object>) response.getBody()).getCode());
        assertEquals("Username atau Password salah", ((ResponeHandler<Object>) response.getBody()).getMessage());
    }

}
